name: Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행

    steps:
      # 1. Checkout 코드
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

      # 3. Gradle 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

      # 4. APK 빌드
      - name: Build APK with Gradle
        run: ./gradlew assembleRelease  # release 빌드를 실행합니다.

      # 5. APK 파일 목록 확인
      - name: List APK files
      run: ls -R app/build/outputs/apk

      # 6. rclone 설치
    - name: Install rclone
      run: |
        curl https://rclone.org/install.sh | sudo bash  # rclone 설치

      # 7. rclone 설정
      - name: Configure rclone with Google credentials
      run: |
        mkdir -p ~/.config/rclone  # rclone 설정 디렉토리 생성
        echo "${{ secrets.GOOGLE_CREDENTIALS }}" > ~/gdrive.json  # 서비스 계정 JSON 파일을 임시로 저장
        rclone config create gdrive drive service_account_file=~/gdrive.json  # Google Drive를 rclone에 설정

      # 8. APK 파일 Google Drive에 업로드
    - name: Upload APK to Google Drive
      run: |
        APK_PATH=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)  # release 폴더에서 첫 번째 APK 파일 찾기
        VERSION=$(echo "$APK_PATH" | grep -oP '\d+\.\d+\.\d+')  # APK 파일에서 버전 번호 추출
        DESTINATION="gdrive:MyApp/Versions/$VERSION/$(basename $APK_PATH)"  # 업로드 경로 설정

        echo "Uploading $APK_PATH to $DESTINATION"
        rclone copy "$APK_PATH" "$DESTINATION" --progress  # APK 파일을 Google Drive에 업로드